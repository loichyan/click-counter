{"version":3,"sources":["ClickCounter.tsx","App.tsx","index.tsx"],"names":["ClickCounter","props","defaultTitle","idx","state","records","title","undefined","open","addCount","bind","setTitle","reduceCount","setOpen","setClose","handleOk","removeSelf","Box","Card","CardActionArea","onClick","this","CardMedia","width","height","bgcolor","colors","teal","viewBox","type","common","white","x","y","className","fontSize","fontWeight","transform","length","strokeWidth","opacity","CardContent","color","Typography","variant","map","v","k","slice","record","Fragment","dateFormat","CardActions","Grid","container","direction","item","IconButton","Settings","xs","justify","Backspace","Dialog","onClose","DialogTitle","DialogContent","TextField","fullWidth","label","defaultValue","onChange","DialogActions","Button","size","setState","concat","Date","e","target","value","removeCounter","React","Component","App","counterNum","counters","Map","addCounter","clearCounters","classes","Container","spacing","counter","SpeedDial","ariaLabel","speedDial","icon","SpeedDialIcon","onOpen","SpeedDialAction","tooltipTitle","Add","ClearAll","set","delete","withStyles","theme","createStyles","position","bottom","right","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ec48df3.chunk.js","sourcesContent":["import {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  IconButton,\n  Box,\n  CardMedia,\n  Typography,\n  colors,\n  Grid,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { Backspace, Settings } from \"@material-ui/icons\";\nimport React from \"react\";\nimport dateFormat from \"dateformat\";\n\nexport interface ClickCounterProps {\n  idx: number;\n  removeCounter: (idx: number) => void;\n}\n\nexport interface ClickCounterState {\n  title: string | undefined;\n  records: Array<Date>;\n  open: boolean;\n}\n\nexport class ClickCounter extends React.Component<\n  ClickCounterProps,\n  ClickCounterState\n> {\n  private readonly defaultTitle: string;\n\n  constructor(props: ClickCounterProps) {\n    super(props);\n    this.defaultTitle = `Counter #${this.props.idx}`;\n    this.state = { records: [], title: undefined, open: false };\n\n    this.addCount = this.addCount.bind(this);\n    this.setTitle = this.setTitle.bind(this);\n    this.reduceCount = this.reduceCount.bind(this);\n    this.setOpen = this.setOpen.bind(this);\n    this.setClose = this.setClose.bind(this);\n    this.handleOk = this.handleOk.bind(this);\n    this.removeSelf = this.removeSelf.bind(this);\n  }\n\n  render() {\n    return (\n      <Box>\n        <Card>\n          <CardActionArea onClick={this.addCount}>\n            <CardMedia>\n              <Box width=\"9rem\" height=\"5rem\" bgcolor={colors.teal[400]}>\n                <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n                  <style type=\"text/css\">\n                    {`\n                    .countText {\n                      color: ${colors.common.white};\n                      fill: currentColor;\n                      stroke: currentColor;\n                      text-anchor: middle;\n                      dominant-baseline: middle;\n                    }\n                  `}\n                  </style>\n                  <text\n                    x=\"50%\"\n                    y=\"50%\"\n                    className=\"countText\"\n                    fontSize=\"50\"\n                    fontWeight=\"bold\"\n                    transform=\"translate(0 1)\"\n                  >\n                    {this.state.records.length}\n                  </text>\n                  <text\n                    x=\"50%\"\n                    y=\"50%\"\n                    className=\"countText\"\n                    fontSize=\"150\"\n                    fontWeight=\"bold\"\n                    strokeWidth=\"10\"\n                    opacity=\"0.3\"\n                    transform=\"translate(0 10)\"\n                  >\n                    {this.state.records.length}\n                  </text>\n                </svg>\n              </Box>\n            </CardMedia>\n            <CardContent>\n              <Box color=\"text.primary\">\n                <Typography variant=\"body1\">\n                  {this.state.title === undefined\n                    ? this.defaultTitle\n                    : this.state.title}\n                </Typography>\n              </Box>\n              <Box color=\"text.secondary\">\n                {this.state.records\n                  .map((v, k): [Date, number] => [v, k])\n                  .slice(-3)\n                  .map(([record, idx]) => (\n                    <React.Fragment key={idx}>\n                      <Typography variant=\"body1\">\n                        {`${dateFormat(record, \"hh:mm:ss\")} #${idx}`}\n                      </Typography>\n                    </React.Fragment>\n                  ))}\n              </Box>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Grid container direction=\"row\">\n              <Grid item>\n                <IconButton aria-label=\"settings\" onClick={this.setOpen}>\n                  <Settings />\n                </IconButton>\n              </Grid>\n              <Grid container item xs justify=\"flex-end\">\n                <IconButton aria-label=\"backspace\" onClick={this.reduceCount}>\n                  <Backspace />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </CardActions>\n        </Card>\n        <Dialog open={this.state.open} onClose={this.setClose}>\n          <DialogTitle>Settings</DialogTitle>\n          <DialogContent>\n            <TextField\n              fullWidth\n              label={this.defaultTitle}\n              defaultValue={this.state.title}\n              onChange={this.setTitle}\n            ></TextField>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"secondary\" size=\"medium\" onClick={this.removeSelf}>\n              Delete\n            </Button>\n            <Button color=\"primary\" size=\"medium\" onClick={this.handleOk}>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n    );\n  }\n\n  addCount() {\n    this.setState((state) => {\n      const count = state.records.concat(new Date());\n      return { records: count };\n    });\n  }\n\n  reduceCount() {\n    if (this.state.records.length === 0) {\n      return;\n    }\n    this.setState((state) => {\n      const count = state.records.slice(0, -1);\n      return { records: count };\n    });\n  }\n\n  setTitle(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState(() => {\n      if (e.target.value.length === 0) {\n        return { title: undefined };\n      }\n      return { title: e.target.value };\n    });\n  }\n\n  setOpen() {\n    this.setState(() => ({\n      open: true,\n    }));\n  }\n\n  setClose() {\n    this.setState(() => ({\n      open: false,\n    }));\n  }\n\n  handleOk() {\n    this.setClose();\n  }\n\n  removeSelf() {\n    this.props.removeCounter(this.props.idx);\n    this.setClose();\n  }\n}\n\nexport default ClickCounter;\n","import React from \"react\";\nimport {\n  Grid,\n  Container,\n  createStyles,\n  WithStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from \"@material-ui/lab\";\nimport { Add, ClearAll } from \"@material-ui/icons\";\nimport { ClickCounter, ClickCounterProps } from \"./ClickCounter\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    speedDial: {\n      position: \"fixed\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  });\n\nexport interface AppProps extends WithStyles<typeof styles> {}\n\nexport interface AppState {\n  counters: Map<\n    number,\n    React.ComponentElement<ClickCounterProps, ClickCounter>\n  >;\n  open: boolean;\n}\n\nexport class App extends React.Component<AppProps, AppState> {\n  counterNum: number = 0;\n\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n      counters: new Map(),\n      open: false,\n    };\n\n    this.addCounter = this.addCounter.bind(this);\n    this.removeCounter = this.removeCounter.bind(this);\n    this.setOpen = this.setOpen.bind(this);\n    this.setClose = this.setClose.bind(this);\n    this.clearCounters = this.clearCounters.bind(this);\n  }\n\n  componentDidMount() {\n    this.addCounter();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Container>\n        <Grid container justify=\"center\" spacing={2}>\n          {[...this.state.counters].map(([idx, counter]) => (\n            <React.Fragment key={idx}>\n              <Grid item>{counter}</Grid>\n            </React.Fragment>\n          ))}\n        </Grid>\n        <SpeedDial\n          ariaLabel=\"speed dial\"\n          className={classes.speedDial}\n          icon={<SpeedDialIcon />}\n          open={this.state.open}\n          onOpen={this.setOpen}\n          onClose={this.setClose}\n        >\n          <SpeedDialAction\n            tooltipTitle=\"Add\"\n            icon={<Add />}\n            onClick={this.addCounter}\n          />\n          <SpeedDialAction\n            tooltipTitle=\"Clear\"\n            icon={<ClearAll />}\n            onClick={() => {\n              this.clearCounters();\n            }}\n          />\n        </SpeedDial>\n      </Container>\n    );\n  }\n\n  addCounter() {\n    this.setState((state) => {\n      this.counterNum += 1;\n      const counters = new Map(state.counters);\n      counters.set(\n        this.counterNum,\n        <ClickCounter\n          idx={this.counterNum}\n          removeCounter={this.removeCounter}\n        />\n      );\n      return { counters };\n    });\n  }\n\n  removeCounter(idx: number) {\n    this.setState((state) => {\n      const counters = new Map(state.counters);\n      counters.delete(idx);\n      return { counters };\n    });\n  }\n\n  clearCounters() {\n    this.setState(\n      () => {\n        this.counterNum = 0;\n        return { counters: new Map() };\n      },\n      () => {\n        this.addCounter();\n        this.setClose();\n      }\n    );\n  }\n\n  setOpen() {\n    this.setState(() => ({ open: true }));\n  }\n\n  setClose() {\n    this.setState(() => ({ open: false }));\n  }\n}\n\nexport default withStyles(styles)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}