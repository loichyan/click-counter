{"version":3,"sources":["ClickCounter.tsx","App.tsx","index.tsx"],"names":["ClickCounter","props","defaultTitle","idx","state","open","addRecord","bind","setTitle","popRecord","setOpen","setClose","handleOk","removeSelf","Box","Card","CardActionArea","onClick","this","CardMedia","width","height","bgcolor","colors","teal","viewBox","type","common","white","x","y","className","fontSize","fontWeight","transform","records","size","strokeWidth","opacity","CardContent","color","Typography","variant","undefined","title","map","v","k","slice","record","Fragment","dateFormat","CardActions","Grid","container","direction","item","IconButton","Settings","xs","justify","Backspace","Dialog","onClose","DialogTitle","DialogContent","TextField","fullWidth","label","defaultValue","onChange","DialogActions","Button","pushRecord","Date","e","target","value","length","setState","React","Component","App","counterNum","Immutable","OrderedMap","addCounter","removeCounter","clearCounters","export","date","update","push","pop","delete","classes","Container","spacing","counter","SpeedDial","ariaLabel","speedDial","icon","SpeedDialIcon","onOpen","SpeedDialAction","tooltipTitle","Add","ClearAll","Share","set","List","clear","blob","Blob","JSON","stringify","url","URL","createObjectURL","link","document","createElement","setAttribute","click","withStyles","theme","createStyles","position","bottom","right","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5691f815.chunk.js","sourcesContent":["import {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  IconButton,\n  Box,\n  CardMedia,\n  Typography,\n  colors,\n  Grid,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { Backspace, Settings } from \"@material-ui/icons\";\nimport Immutable from \"immutable\";\nimport React from \"react\";\nimport dateFormat from \"dateformat\";\n\nexport interface ClickCounterProps {\n  idx: number;\n  records: Immutable.List<Date>;\n  pushRecord(date: Date): void;\n  popRecord(): void;\n  removeSelf(): void;\n}\n\ninterface ClickCounterState {\n  title?: string;\n  open: boolean;\n}\n\nexport class ClickCounter extends React.Component<\n  ClickCounterProps,\n  ClickCounterState\n> {\n  private readonly defaultTitle: string;\n\n  constructor(props: ClickCounterProps) {\n    super(props);\n    this.defaultTitle = `Counter #${this.props.idx}`;\n    this.state = { open: false };\n\n    this.addRecord = this.addRecord.bind(this);\n    this.setTitle = this.setTitle.bind(this);\n    this.popRecord = this.popRecord.bind(this);\n    this.setOpen = this.setOpen.bind(this);\n    this.setClose = this.setClose.bind(this);\n    this.handleOk = this.handleOk.bind(this);\n    this.removeSelf = this.removeSelf.bind(this);\n  }\n\n  render() {\n    return (\n      <Box>\n        <Card>\n          <CardActionArea onClick={this.addRecord}>\n            <CardMedia>\n              <Box width=\"9rem\" height=\"5rem\" bgcolor={colors.teal[400]}>\n                <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n                  <style type=\"text/css\">\n                    {`\n                    .countText {\n                      color: ${colors.common.white};\n                      fill: currentColor;\n                      stroke: currentColor;\n                      text-anchor: middle;\n                      dominant-baseline: middle;\n                    }\n                  `}\n                  </style>\n                  <text\n                    x=\"50%\"\n                    y=\"50%\"\n                    className=\"countText\"\n                    fontSize=\"50\"\n                    fontWeight=\"bold\"\n                    transform=\"translate(0 1)\"\n                  >\n                    {this.props.records.size}\n                  </text>\n                  <text\n                    x=\"50%\"\n                    y=\"50%\"\n                    className=\"countText\"\n                    fontSize=\"150\"\n                    fontWeight=\"bold\"\n                    strokeWidth=\"10\"\n                    opacity=\"0.3\"\n                    transform=\"translate(0 10)\"\n                  >\n                    {this.props.records.size}\n                  </text>\n                </svg>\n              </Box>\n            </CardMedia>\n            <CardContent>\n              <Box color=\"text.primary\">\n                <Typography variant=\"body1\">\n                  {this.state.title === undefined\n                    ? this.defaultTitle\n                    : this.state.title}\n                </Typography>\n              </Box>\n              <Box color=\"text.secondary\">\n                {this.props.records\n                  .map((v, k): [Date, number] => [v, k])\n                  .slice(-3)\n                  .map(([record, idx]) => (\n                    <React.Fragment key={idx}>\n                      <Typography variant=\"body1\">\n                        {`${dateFormat(record, \"hh:mm:ss\")} #${idx}`}\n                      </Typography>\n                    </React.Fragment>\n                  ))}\n              </Box>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Grid container direction=\"row\">\n              <Grid item>\n                <IconButton aria-label=\"settings\" onClick={this.setOpen}>\n                  <Settings />\n                </IconButton>\n              </Grid>\n              <Grid container item xs justify=\"flex-end\">\n                <IconButton aria-label=\"backspace\" onClick={this.popRecord}>\n                  <Backspace />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </CardActions>\n        </Card>\n        <Dialog open={this.state.open} onClose={this.setClose}>\n          <DialogTitle>Settings</DialogTitle>\n          <DialogContent>\n            <TextField\n              fullWidth\n              label={this.defaultTitle}\n              defaultValue={this.state.title}\n              onChange={this.setTitle}\n            ></TextField>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"secondary\" size=\"medium\" onClick={this.removeSelf}>\n              Delete\n            </Button>\n            <Button color=\"primary\" size=\"medium\" onClick={this.handleOk}>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n    );\n  }\n\n  addRecord() {\n    this.props.pushRecord(new Date());\n  }\n\n  popRecord() {\n    this.props.popRecord();\n  }\n\n  setTitle(e: React.ChangeEvent<HTMLInputElement>) {\n    if (e.target.value.length === 0) {\n      this.setState({ title: undefined });\n      return;\n    }\n    this.setState({ title: e.target.value });\n  }\n\n  setOpen() {\n    this.setState({ open: true });\n  }\n\n  setClose() {\n    this.setState({ open: false });\n  }\n\n  handleOk() {\n    this.setClose();\n  }\n\n  removeSelf() {\n    this.props.removeSelf();\n    this.setClose();\n  }\n}\n\nexport default ClickCounter;\n","import React from \"react\";\nimport {\n  Grid,\n  Container,\n  createStyles,\n  WithStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from \"@material-ui/lab\";\nimport { Add, ClearAll, Share } from \"@material-ui/icons\";\nimport ClickCounter from \"./ClickCounter\";\nimport Immutable from \"immutable\";\nimport dateFormat from \"dateformat\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    speedDial: {\n      position: \"fixed\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  });\n\nexport interface AppProps extends WithStyles<typeof styles> {}\n\ninterface AppState {\n  records: Immutable.OrderedMap<number, Immutable.List<Date>>;\n  open: boolean;\n}\n\nexport class App extends React.Component<AppProps, AppState> {\n  counterNum: number = 0;\n\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n      records: Immutable.OrderedMap(),\n      open: false,\n    };\n\n    this.addCounter = this.addCounter.bind(this);\n    this.removeCounter = this.removeCounter.bind(this);\n    this.setOpen = this.setOpen.bind(this);\n    this.setClose = this.setClose.bind(this);\n    this.clearCounters = this.clearCounters.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  pushRecord(idx: number, date: Date) {\n    this.setState((state) => ({\n      records: state.records.update(idx, (records) => records.push(date)),\n    }));\n  }\n\n  popRecord(idx: number) {\n    this.setState((state) => ({\n      records: state.records.update(idx, (records) => records.pop()),\n    }));\n  }\n\n  removeCounter(idx: number) {\n    this.setState((state) => {\n      return { records: state.records.delete(idx) };\n    });\n  }\n\n  componentDidMount() {\n    this.addCounter();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Container>\n        <Grid container justify=\"center\" spacing={2}>\n          {[...this.state.records].map(([counter, records]) => (\n            <React.Fragment key={counter}>\n              <Grid item>\n                <ClickCounter\n                  idx={counter}\n                  records={records}\n                  pushRecord={(date) => this.pushRecord(counter, date)}\n                  popRecord={() => this.popRecord(counter)}\n                  removeSelf={() => this.removeCounter(counter)}\n                />\n              </Grid>\n            </React.Fragment>\n          ))}\n        </Grid>\n        <SpeedDial\n          ariaLabel=\"speed dial\"\n          className={classes.speedDial}\n          icon={<SpeedDialIcon />}\n          open={this.state.open}\n          onOpen={this.setOpen}\n          onClose={this.setClose}\n        >\n          <SpeedDialAction\n            tooltipTitle=\"Add\"\n            icon={<Add />}\n            onClick={this.addCounter}\n          />\n          <SpeedDialAction\n            tooltipTitle=\"Clear\"\n            icon={<ClearAll />}\n            onClick={this.clearCounters}\n          />\n          <SpeedDialAction\n            tooltipTitle=\"Export\"\n            icon={<Share />}\n            onClick={this.export}\n          />\n        </SpeedDial>\n      </Container>\n    );\n  }\n\n  addCounter() {\n    this.counterNum += 1;\n    this.setState((state) => {\n      return {\n        records: state.records.set(this.counterNum, Immutable.List()),\n      };\n    });\n  }\n\n  clearCounters() {\n    this.counterNum = 0;\n    this.setState(\n      (state) => {\n        return { records: state.records.clear() };\n      },\n      () => {\n        this.addCounter();\n        this.setClose();\n      }\n    );\n  }\n\n  setOpen() {\n    this.setState({ open: true });\n  }\n\n  setClose() {\n    this.setState({ open: false });\n  }\n\n  export() {\n    const blob = new Blob([JSON.stringify(this.state.records)], {\n      type: \"application/json;charset=utf-8\",\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", url);\n    link.setAttribute(\n      \"download\",\n      `${dateFormat(new Date(), \"yyyy-mm-dd-HH-MM-ss\")}.json`\n    );\n    link.click();\n    this.setClose();\n  }\n}\n\nexport default withStyles(styles)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}