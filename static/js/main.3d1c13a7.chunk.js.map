{"version":3,"sources":["counter/bloc_util.tsx","counter/bloc.tsx","counter/view/counter_view.tsx","counter/view/counter_page.tsx","app.tsx","index.tsx"],"names":["NullContext","makeBlocContext","Target","Context","_contextType","React","createContext","WithContext","context","this","Error","name","props","builder","PureComponent","contextType","Provider","value","create","children","Builder","bloc","state","Cubit","updater","emit_with","add","Bloc","makeCubitContext","Base","CounterViewState","counters","Immutable","List","CounterViewBloc","addCounter","push","CounterBloc","size","removeCounter","idx","set","clearCounter","clear","$","CounterState","defaultTitle","records","title","TitleBloc","RecordsBloc","pushRecord","time","Date","popRecord","pop","setTitle","emit","length","CounterView","Fragment","container","justify","spacing","filter","val","BLOC","map","counterBloc","item","Counter","recordsBloc","titleBloc","onClick","direction","xs","CounterNum","width","height","bgcolor","MUI","teal","viewBox","type","common","white","x","y","className","fontSize","fontWeight","transform","strokeWidth","opacity","CounterInfo","color","variant","v","k","slice","record","dateFormat","Settings","setOpen","setState","open","setClose","handleOk","onClose","fullWidth","label","defaultValue","onChange","e","target","counterViewBloc","CounterPage","SpeedDialInner","exportData","toJSON","export","data","dataStr","JSON","stringify","console","info","blob","Blob","url","URL","createObjectURL","link","document","createElement","setAttribute","click","classes","ariaLabel","speedDial","icon","onOpen","tooltipTitle","SpeedDial","theme","position","bottom","right","App","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d1c13a7.chunk.js","sourcesContent":["import { Bloc } from \"@felangel/bloc\";\nimport { BlocBuilder } from \"@felangel/react-bloc\";\nimport React from \"react\";\n\ntype Constructor<T> = new (...args: any[]) => T;\n\nclass NullContext {\n  toString() {\n    return \"NullContext\";\n  }\n}\n\nexport function makeBlocContext<E, S, B extends Bloc<E, S>>(\n  Target: Constructor<B>\n) {\n  type WithContextProps = { builder(context: B): JSX.Element };\n  type ProviderProps = {\n    create(): B;\n    children: JSX.Element;\n  };\n  type BuilderProps = {\n    builder(state: S, context: B): JSX.Element;\n  };\n\n  class Context {\n    private static readonly _contextType = React.createContext<B | NullContext>(\n      new NullContext()\n    );\n\n    static get contextType() {\n      return Context._contextType as React.Context<B>;\n    }\n\n    static readonly WithContext = class WithContext extends React.PureComponent<WithContextProps> {\n      static contextType = Context._contextType;\n      context!: React.ContextType<typeof Context._contextType>;\n\n      render() {\n        if (this.context instanceof NullContext) {\n          throw Error(\n            `NullContext found, you must run the Provider of ${Target.name} first`\n          );\n        }\n        return this.props.builder(this.context);\n      }\n    };\n\n    static readonly Provider = class Provider extends React.PureComponent<ProviderProps> {\n      render() {\n        return (\n          // eslint-disable-next-line react/jsx-pascal-case\n          <Context._contextType.Provider value={this.props.create()}>\n            {this.props.children}\n          </Context._contextType.Provider>\n        );\n      }\n    };\n\n    static readonly Builder = class Builder extends React.PureComponent<BuilderProps> {\n      render() {\n        return (\n          <Context.WithContext\n            builder={(context) => (\n              <BlocBuilder<B, S>\n                bloc={context}\n                builder={(state) => this.props.builder(state, context)}\n              />\n            )}\n          />\n        );\n      }\n    };\n  }\n\n  return Context;\n}\n\nexport function wrapBlocWithContext<E, S, B extends Bloc<E, S>>(\n  Base: Constructor<B>\n) {\n  const contextBloc = makeBlocContext<E, S, B>(Base);\n\n  abstract class ContextBloc extends Base {\n    static readonly contextType = contextBloc.contextType;\n    static readonly WithContext = contextBloc.WithContext;\n    static readonly Provider = contextBloc.Provider;\n    static readonly Builder = contextBloc.Builder;\n  }\n  return ContextBloc;\n}\n\ntype Updater<S> = (state: S) => S;\n\nexport class Cubit<S> extends Bloc<Updater<S>, S> {\n  async *mapEventToState(updater: Updater<S>) {\n    yield updater(this.state);\n  }\n\n  emit(state: S) {\n    this.emit_with(() => state);\n  }\n\n  emit_with(updater: Updater<S>) {\n    this.add(updater);\n  }\n}\n\nexport function makeCubitContext<S, C extends Cubit<S>>(Base: Constructor<C>) {\n  return makeBlocContext<Updater<S>, S, C>(Base);\n}\n\nexport function wrapCubitWithContext<S, C extends Cubit<S>>(\n  Base: Constructor<C>\n) {\n  return wrapBlocWithContext<Updater<S>, S, C>(Base);\n}\n","import Immutable from \"immutable\";\n\nimport { Cubit, makeCubitContext } from \"./bloc_util\";\n\nexport class CounterViewState {\n  readonly counters: Immutable.List<CounterBloc | null>;\n\n  constructor(counters?: Immutable.List<CounterBloc | null>) {\n    this.counters = counters || Immutable.List();\n  }\n}\n\nexport class CounterViewBloc extends Cubit<CounterViewState> {\n  static readonly $ = makeCubitContext<CounterViewState, CounterViewBloc>(\n    CounterViewBloc\n  );\n\n  constructor() {\n    super(new CounterViewState());\n  }\n\n  addCounter = () => {\n    this.emit_with(\n      (state) =>\n        new CounterViewState(\n          this.state.counters.push(new CounterBloc(state.counters.size))\n        )\n    );\n  };\n\n  removeCounter = (idx: number) => {\n    this.emit_with(\n      (state) => new CounterViewState(state.counters.set(idx, null))\n    );\n  };\n\n  clearCounter = () => {\n    this.emit_with((state) => new CounterViewState(state.counters.clear()));\n  };\n}\n\nexport class CounterState {\n  readonly records: RecordsBloc;\n  readonly title: TitleBloc;\n\n  constructor(defaultTitle: String, records?: Records) {\n    this.title = new TitleBloc(defaultTitle);\n    this.records = new RecordsBloc(records);\n  }\n}\n\nexport class CounterBloc extends Cubit<CounterState> {\n  static readonly $ = makeCubitContext<CounterState, CounterBloc>(CounterBloc);\n\n  readonly idx: number;\n\n  constructor(idx: number, records?: Records) {\n    super(new CounterState(`Counter #${idx + 1}`, records));\n    this.idx = idx;\n  }\n}\n\nexport type Records = Immutable.List<Date>;\n\nexport class RecordsBloc extends Cubit<Records> {\n  static readonly $ = makeCubitContext<Records, RecordsBloc>(RecordsBloc);\n\n  constructor(records?: Records) {\n    super(records || Immutable.List());\n  }\n\n  pushRecord = (time?: Date) => {\n    this.emit_with((state) => state.push(time || new Date()));\n  };\n\n  popRecord = () => {\n    this.emit_with((state) => state.pop());\n  };\n}\n\nexport class TitleBloc extends Cubit<String | null> {\n  static readonly $ = makeCubitContext<String | null, TitleBloc>(TitleBloc);\n\n  readonly defaultTitle: String;\n\n  constructor(defaultTitle: String) {\n    super(null);\n    this.defaultTitle = defaultTitle;\n  }\n\n  setTitle = (title: String) => {\n    this.emit(title.length === 0 ? null : title);\n  };\n}\n","import React from \"react\";\nimport * as MUI from \"@material-ui/core\";\nimport * as ICONS from \"@material-ui/icons\";\nimport dateFormat from \"dateformat\";\n\nimport * as BLOC from \"../bloc\";\n\nexport class CounterView extends React.PureComponent {\n  render() {\n    return (\n      <React.Fragment>\n        <BLOC.CounterViewBloc.$.Builder\n          builder={(state) => (\n            <MUI.Grid container justify=\"center\" spacing={2}>\n              {state.counters\n                .filter((val) => val instanceof BLOC.CounterBloc)\n                .map((val) => {\n                  const counterBloc = val!;\n                  return (\n                    <React.Fragment key={counterBloc.idx}>\n                      <MUI.Grid item>\n                        <BLOC.CounterBloc.$.Provider\n                          create={() => counterBloc!}\n                        >\n                          <Counter />\n                        </BLOC.CounterBloc.$.Provider>\n                      </MUI.Grid>\n                    </React.Fragment>\n                  );\n                })}\n            </MUI.Grid>\n          )}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nclass Counter extends React.PureComponent {\n  static readonly contextType = BLOC.CounterBloc.$.contextType;\n  readonly context!: React.ContextType<typeof BLOC.CounterBloc.$.contextType>;\n\n  render() {\n    const counterBloc = this.context;\n    const recordsBloc = counterBloc.state.records;\n    const titleBloc = counterBloc.state.title;\n\n    return (\n      <BLOC.RecordsBloc.$.Provider create={() => recordsBloc}>\n        <BLOC.TitleBloc.$.Provider create={() => titleBloc}>\n          <React.Fragment>\n            <MUI.Card>\n              <MUI.CardActionArea onClick={() => recordsBloc.pushRecord()}>\n                <MUI.CardMedia>\n                  <CounterNum />\n                </MUI.CardMedia>\n                <MUI.CardContent>\n                  <CounterInfo />\n                </MUI.CardContent>\n              </MUI.CardActionArea>\n              <MUI.CardActions>\n                <MUI.Grid container direction=\"row\">\n                  <MUI.Grid item>\n                    <Settings />\n                  </MUI.Grid>\n                  <MUI.Grid container item xs justify=\"flex-end\">\n                    <MUI.IconButton\n                      aria-label=\"backspace\"\n                      onClick={() => recordsBloc.popRecord()}\n                    >\n                      <ICONS.Backspace />\n                    </MUI.IconButton>\n                  </MUI.Grid>\n                </MUI.Grid>\n              </MUI.CardActions>\n            </MUI.Card>\n          </React.Fragment>\n        </BLOC.TitleBloc.$.Provider>\n      </BLOC.RecordsBloc.$.Provider>\n    );\n  }\n}\n\nclass CounterNum extends React.PureComponent {\n  render() {\n    return (\n      <MUI.Box width=\"9rem\" height=\"5rem\" bgcolor={MUI.colors.teal[400]}>\n        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n          <style type=\"text/css\">\n            {`\n              .countText {\n                color: ${MUI.colors.common.white};\n                fill: currentColor;\n                stroke: currentColor;\n                text-anchor: middle;\n                dominant-baseline: middle;\n              }\n            `}\n          </style>\n          <BLOC.RecordsBloc.$.Builder\n            builder={(records) => (\n              <g>\n                <text\n                  x=\"50%\"\n                  y=\"50%\"\n                  className=\"countText\"\n                  fontSize=\"50\"\n                  fontWeight=\"bold\"\n                  transform=\"translate(0 1)\"\n                >\n                  {records.size}\n                </text>\n                <text\n                  x=\"50%\"\n                  y=\"50%\"\n                  className=\"countText\"\n                  fontSize=\"150\"\n                  fontWeight=\"bold\"\n                  strokeWidth=\"10\"\n                  opacity=\"0.3\"\n                  transform=\"translate(0 10)\"\n                >\n                  {records.size}\n                </text>\n              </g>\n            )}\n          />\n        </svg>\n      </MUI.Box>\n    );\n  }\n}\n\nclass CounterInfo extends React.PureComponent {\n  render() {\n    return (\n      <MUI.Box>\n        <BLOC.TitleBloc.$.Builder\n          builder={(title, titleBloc) => (\n            <MUI.Box color=\"text.primary\">\n              <MUI.Typography variant=\"body1\">\n                {title || titleBloc.defaultTitle}\n              </MUI.Typography>\n            </MUI.Box>\n          )}\n        />\n        <BLOC.RecordsBloc.$.Builder\n          builder={(records) => (\n            <MUI.Box color=\"text.secondary\">\n              {records\n                .map((v, k): [Date, number] => [v, k])\n                .slice(-3)\n                .map(([record, idx]) => (\n                  <React.Fragment key={idx}>\n                    <MUI.Typography variant=\"body1\">\n                      {`${dateFormat(record, \"hh:mm:ss\")} #${idx}`}\n                    </MUI.Typography>\n                  </React.Fragment>\n                ))}\n            </MUI.Box>\n          )}\n        />\n      </MUI.Box>\n    );\n  }\n}\n\ninterface SettingsState {\n  readonly open: boolean;\n}\n\nclass Settings extends React.PureComponent<{}, SettingsState> {\n  static readonly contextType = BLOC.CounterBloc.$.contextType;\n  readonly context!: React.ContextType<typeof BLOC.CounterBloc.$.contextType>;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.state = { open: false };\n  }\n\n  render() {\n    const counterBloc = this.context;\n    const titleBloc = counterBloc.state.title;\n\n    return (\n      <React.Fragment>\n        <MUI.IconButton aria-label=\"settings\" onClick={this.setOpen}>\n          <ICONS.Settings />\n        </MUI.IconButton>\n        <MUI.Dialog open={this.state.open} onClose={this.setClose}>\n          <MUI.DialogTitle>Settings</MUI.DialogTitle>\n          <MUI.DialogContent>\n            <MUI.TextField\n              fullWidth\n              label={titleBloc.defaultTitle}\n              defaultValue={titleBloc.state}\n              onChange={(e) => titleBloc.setTitle(e.target.value)}\n            />\n          </MUI.DialogContent>\n          <MUI.DialogActions>\n            <BLOC.CounterViewBloc.$.WithContext\n              builder={(counterViewBloc) => (\n                <MUI.Button\n                  color=\"secondary\"\n                  size=\"medium\"\n                  onClick={() => {\n                    counterViewBloc.removeCounter(counterBloc.idx);\n                    this.setClose();\n                  }}\n                >\n                  Delete\n                </MUI.Button>\n              )}\n            />\n            <MUI.Button color=\"primary\" size=\"medium\" onClick={this.handleOk}>\n              Ok\n            </MUI.Button>\n          </MUI.DialogActions>\n        </MUI.Dialog>\n      </React.Fragment>\n    );\n  }\n\n  setOpen = () => {\n    this.setState({ open: true });\n  };\n\n  setClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOk = () => {\n    this.setClose();\n  };\n}\n","import React from \"react\";\nimport * as MUI from \"@material-ui/core\";\nimport * as MUI2 from \"@material-ui/lab\";\nimport * as ICONS from \"@material-ui/icons\";\nimport dateFormat from \"dateformat\";\n\nimport * as BLOC from \"../bloc\";\nimport { CounterView } from \"./counter_view\";\n\nexport class CounterPage extends React.PureComponent {\n  private readonly counterViewBloc = new BLOC.CounterViewBloc();\n\n  componentDidMount() {\n    this.counterViewBloc.addCounter();\n  }\n\n  render() {\n    return (\n      <BLOC.CounterViewBloc.$.Provider create={() => this.counterViewBloc}>\n        <React.Fragment>\n          <MUI.Container>\n            <CounterView />\n          </MUI.Container>\n          <SpeedDial />\n        </React.Fragment>\n      </BLOC.CounterViewBloc.$.Provider>\n    );\n  }\n}\n\nconst styles = (theme: MUI.Theme) =>\n  MUI.createStyles({\n    speedDial: {\n      position: \"fixed\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  });\n\nexport interface SpeedDialProps extends MUI.WithStyles<typeof styles> {}\n\ninterface SpeedDialState {\n  readonly open: boolean;\n}\n\nclass SpeedDialInner extends React.PureComponent<\n  SpeedDialProps,\n  SpeedDialState\n> {\n  static readonly contextType = BLOC.CounterViewBloc.$.contextType;\n  readonly context!: React.ContextType<\n    typeof BLOC.CounterViewBloc.$.contextType\n  >;\n\n  constructor(props: SpeedDialProps) {\n    super(props);\n\n    this.state = { open: false };\n  }\n\n  exportData = () => {\n    return this.context.state.counters\n      .filter((val) => val instanceof BLOC.CounterBloc)\n      .map((val) => {\n        const counterBloc = val!;\n        return {\n          title:\n            counterBloc.state.title.state ||\n            counterBloc.state.title.defaultTitle,\n          records: counterBloc.state.records.state.toJSON(),\n        };\n      })\n      .toJSON();\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <MUI2.SpeedDial\n          ariaLabel=\"speed dial\"\n          className={classes.speedDial}\n          icon={<MUI2.SpeedDialIcon />}\n          open={this.state.open}\n          onOpen={this.setOpen}\n          onClose={this.setClose}\n        >\n          <MUI2.SpeedDialAction\n            tooltipTitle=\"Add\"\n            icon={<ICONS.Add />}\n            onClick={this.context.addCounter}\n          />\n          <MUI2.SpeedDialAction\n            tooltipTitle=\"Clear\"\n            icon={<ICONS.ClearAll />}\n            onClick={() => {\n              this.context.clearCounter();\n              this.context.addCounter();\n              this.setClose();\n            }}\n          />\n          <MUI2.SpeedDialAction\n            tooltipTitle=\"Export\"\n            icon={<ICONS.Share />}\n            onClick={this.export}\n          />\n        </MUI2.SpeedDial>\n      </React.Fragment>\n    );\n  }\n\n  setOpen = () => {\n    this.setState({ open: true });\n  };\n\n  setClose = () => {\n    this.setState({ open: false });\n  };\n\n  export = () => {\n    const data = this.exportData();\n    const dataStr = JSON.stringify(data);\n\n    console.info(data);\n\n    const blob = new Blob([dataStr], {\n      type: \"application/json;charset=utf-8\",\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", url);\n    link.setAttribute(\n      \"download\",\n      `${dateFormat(new Date(), \"yyyy-mm-dd-HH-MM-ss\")}.json`\n    );\n    link.click();\n    this.setClose();\n  };\n}\n\nconst SpeedDial = MUI.withStyles(styles)(SpeedDialInner);\n","import React from \"react\";\n\nimport { CounterPage } from \"./counter\";\n\nexport class App extends React.Component {\n  render() {\n    return <CounterPage />;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}